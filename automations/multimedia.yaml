---
- id: check_receiver_source
  alias: Check Receiver source
  initial_state: "off"
  trigger:
    platform: time_pattern
    seconds: "/05"
  action:
    - service: homeassistant.update_entity
      entity_id: media_player.receiver
    - condition: template
      value_template: "{{ states.media_player.receiver.attributes.source is defined }}"
    - service_template: >
        {% set scene = states.input_select.media_scene.state %}
        {% set source = states.media_player.receiver.attributes.source %}
        {% if scene == 'Geen' or scene == 'TV kijken' and source == 'TV'
            or scene == 'Media kijken' and source == 'Mediaplayer'
            or scene == 'Radio luisteren' and source == 'Radio' %}
          automation.turn_off
        {% else %}
          automation.turn_on
        {% endif %}
      data:
        entity_id: automation.check_receiver_source
    - condition: state
      entity_id: automation.check_receiver_source
      state: "on"
    - service: media_player.select_source
      data_template:
        entity_id: media_player.receiver
        source: >
          {% if is_state('input_select.media_scene', 'Radio luisteren') %}
            Radio
          {% elif is_state('input_select.media_scene', 'Media kijken') %}
            Mediaplayer
          {% else %}
            TV
          {% endif %}
- id: turn_on_mediaplayer
  alias: Turn on mediaplayer
  initial_state: "off"
  trigger:
    platform: state
    entity_id: automation.check_receiver_source
    to: "off"
  condition:
    condition: template
    value_template: "{{ is_state('input_select.media_scene', 'Media kijken') }}"
  action:
    - service: switch.turn_on
      entity_id: switch.tv_meubel_mediaplayer
