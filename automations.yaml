###############################
# Multimedia woonkamer
###############################
- id: light_scene_select
  alias: Light Scene Select
  trigger:
    platform: state
    entity_id: input_select.light_scene
  action:
    - service: scene.turn_on
      data_template:
        entity_id: >
          {% set scene = trigger.to_state.state %}
          {% if scene == 'Vakantie' %}
            scene.vakantie
          {% elif scene == 'Normaal' %}
            scene.woonkamer_regular
          {% elif scene == 'Zacht' %}
            scene.woonkamer_dim
          {% elif scene == 'Erg Zacht' %}
            scene.woonkamer_very_dim
          {% else %}
            scene.woonkamer_all_off
          {% endif %}
- id: scene_select
  alias: Scene Select
  trigger:
    platform: state
    entity_id: input_select.media_scene
  action:
    - service: script.turn_on
      data_template:
        entity_id: >
          {% set scene = trigger.to_state.state %}
          {% if scene == 'Radio luisteren' %}
            script.listen_radio
          {% elif scene == 'TV kijken' %}
            script.watch_tv
          {% elif scene == 'Media kijken' %}
            script.watch_media
          {% else %}
            script.all_media_off
          {% endif %}
- id: check_receiver_source
  alias: Check Receiver source
  initial_state: 'off'
  trigger:
    platform: time_pattern
    seconds: '/01'
  action:
    - service: homeassistant.update_entity
      entity_id: media_player.receiver
    - condition: template
      value_template: '{{ states.media_player.receiver.attributes.source is defined }}'
    - service_template: >
        {% set scene = states.input_select.media_scene.state %}
        {% set source = states.media_player.receiver.attributes.source %}
        {% if scene == 'Geen' or scene == 'TV kijken' and source == 'TV'
            or scene == 'Media kijken' and source == 'Mediaplayer'
            or scene == 'Radio luisteren' and source == 'Radio' %}
          automation.turn_off
        {% else %}
          automation.turn_on
        {% endif %}
      data:
        entity_id: automation.check_receiver_source
    - condition: state
      entity_id: automation.check_receiver_source
      state: 'on'
    - service: media_player.select_source
      data_template:
        entity_id: media_player.receiver
        source: >
          {% if is_state('input_select.media_scene', 'Radio luisteren') %}
            Radio
          {% elif is_state('input_select.media_scene', 'Media kijken') %}
            Mediaplayer
          {% else %}
            TV
          {% endif %}
- id: turn_on_mediaplayer
  alias: Turn on mediaplayer
  initial_state: 'off'
  trigger:
    platform: state
    entity_id: automation.check_receiver_source
    to: 'off'
  condition:
    condition: template
    value_template: "{{ is_state('input_select.media_scene', 'Media kijken') }}"
  action:
    - service: switch.turn_on
      entity_id: switch.tv_meubel_mediaplayer

###############################
# Home Assistant
###############################
- id: select_logger_level_homeassistant
  alias: Select Logger Level Home Assistant
  trigger:
    platform: state
    entity_id: input_select.logger_level_homeassistant
  action:
    - service: logger.set_level
      data_template:
        homeassistant: "{{ trigger.to_state.state }}"
- id: select_logger_level
  alias: Select Logger Level
  trigger:
    platform: state
    entity_id: input_select.logger_level_zwave
  action:
    - service: logger.set_level
      data_template:
        openzwave: "{{ trigger.to_state.state }}"
    - service: logger.set_level
      data_template:
        libopenzwave: "{{ trigger.to_state.state }}"
    - service: logger.set_level
      data_template:
        homeassistant.components.zwave.util: "{{ trigger.to_state.state }}"
- id: select_logger_level_deconz
  alias: Select Logger Level deCONZ
  trigger:
    platform: state
    entity_id: input_select.logger_level_deconz
  action:
    - service: logger.set_level
      data_template:
        pydeconz: "{{ trigger.to_state.state }}"
    - service: logger.set_level
      data_template:
        homeassistant.components.deconz: "{{ trigger.to_state.state }}"
- id: startup
  alias: Opstarten
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: script.detect_media
    - service: script.detect_lights
    - service: script.reset_rf
    - service: automation.turn_off
      entity_id: automation.opstarten
    - condition: sun
      after: sunset
      after_offset: "-1:00:00"
    - condition: time
      before: '23:05:00'
    - service: automation.trigger
      entity_id: automation.sunset_preparation

###############################
# Remote Control
#
# The ZME_RC2 has 11 rows of buttons
# Each button triggers a zwave scene
# The row of the pressed button can be determined with 'scene_id // 10'
# The row-specific scene can be determined with 'scene_id % 10'
# The row-specific scenes which buttons trigger are:
#
# 1: Short press of the left button
# 2: Short press of the right button
# 3: Initiation of long pressing the left button
# 4: Initiation of long pressing the right button
# 5: Release of long pressing the left button
# 6: Release of long pressing the right button
#
# For now, we only trigger on short press or initiation of long press (<= 4)
# So the side of the button can be determined by '(scene_id % 10) % 2'
# 1: left side
# 0: right side
#
###############################
- id: rc_buttons
  alias: RC Buttons
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.remote
  condition:
    condition: template
    value_template: '{{ (trigger.event.data.scene_id % 10) <= 5 }}'
  action:
    - service: automation.turn_off
      entity_id: automation.holiday_evening_end
    - service: automation.turn_off
      entity_id: automation.holiday_morning_start
    - service: automation.turn_off
      entity_id: automation.holiday_morning_end
    - service_template: >
        {% set row = trigger.event.data.scene_id // 10 %}
        {% set side = (trigger.event.data.scene_id % 10) % 2 %}
        {% if row == 1 %}
          light.turn_{% if side == 1 %}on{% else %}off{% endif %}
        {% elif row >= 8 and row <= 10 %}
          script.turn_on
        {% elif row == 11 %}
          {% if side == 1 %}
            homeassistant.turn_on
          {% else %}
            script.turn_on
          {% endif %}
        {% else %}
          script.turn_on
        {% endif %}
      data_template:
        entity_id: >
          {% set row = trigger.event.data.scene_id // 10 %}
          {% set side = (trigger.event.data.scene_id % 10) % 2 %}
          {% if row == 1 %}
            light.tv_meubel_spruitje
          {% elif row >= 8 and row <= 10 %}
            {% if side == 1 %}
              {% if row == 8 %}
                script.select_tv_kijken
              {% elif row == 9 %}
                script.select_media_kijken
              {% else %}
                script.select_radio_luisteren
              {% endif %}
            {% else %}
              script.select_geen
            {% endif %}
          {% elif row == 11 %}
            {% if side == 1 %}
              group.living_room_lights
            {% else %}
              script.all_off
            {% endif %}
          {% elif side == 1 and row == 2 %}
            script.select_lights_regular
          {% elif side == 1 and row == 3 %}
            script.select_lights_dim
          {% elif side == 1 and row == 4 %}
            script.select_lights_very_dim
          {% elif side == 1 and row == 5 %}
            script.select_lights_vacancy
          {% else %}
            script.select_lights_all_off
          {% endif %}

###############################
# RF Buttons
###############################
- id: rf_button_tv_slaapkamer
  alias: RF Button TV Slaapkamer
  trigger:
  - platform: state
    entity_id: 'binary_sensor.rf_button_tv_slaapkamer'
    from: 'off'
    to: 'on'
  action:
  - service: script.toggle_tv_slaapkamer

###############################
# Timers licht
###############################
- id: sunset_preparation
  alias: Sunset Preparation
  trigger:
    platform: sun
    event: sunset
    offset: '-01:00:00'
  action:
    - service: homeassistant.turn_on
      entity_id: group.sunset_automations
- id: sunset_spruitje
  alias: Sunset spruitje
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunset
    offset: '-00:45:00'
  condition:
    condition: state
    entity_id: group.activity_at_home
    state: 'on'
  action:
    - service: scene.turn_on
      entity_id: scene.woonkamer_regular_stage_1
- id: sunset_lamp_links_achter
  alias: Sunset lamp links achter
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunset
    offset: '-00:25:00'
  condition:
    condition: state
    entity_id: group.activity_at_home
    state: 'on'
  action:
    - service: scene.turn_on
      entity_id: scene.woonkamer_regular_stage_2
- id: sunset_lamp_links_op_tv_meubel
  alias: Sunset lamp links op tv meubel
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunset
    offset: '-00:20:00'
  condition:
    condition: state
    entity_id: group.activity_at_home
    state: 'on'
  action:
    - service: scene.turn_on
      entity_id: scene.woonkamer_regular_stage_3
- id: sunset_lamp_schilderij
  alias: Sunset lamp schilderij
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunset
    offset: '-00:15:00'
  condition:
    condition: state
    entity_id: group.activity_at_home
    state: 'on'
  action:
    - service: scene.turn_on
      entity_id: scene.woonkamer_regular_stage_4
- id: sunset_lamp_bij_het_raam
  alias: Sunset lamp bij het raam
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunset
    offset: '-00:05:00'
  condition:
    condition: state
    entity_id: group.activity_at_home
    state: 'on'
  action:
    - service: script.select_lights_regular
- id: sunset_buitenlamp_voor
  alias: Sunset buitenlamp voor
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunset
    offset: '+00:05:00'
  action:
    - service: switch.turn_on
      entity_id: switch.hal_buitenlamp_voor
    - service: automation.turn_on
      entity_id: automation.midnight_buitenlamp_voor
    - service: automation.turn_off
      entity_id: automation.sunset_buitenlamp_voor
- id: midnight_buitenlamp_voor
  alias: Midnight buitenlamp voor
  initial_state: 'off'
  trigger:
    platform: time
    at: '23:05:00'
  action:
    - service: switch.turn_off
      entity_id: switch.hal_buitenlamp_voor
    - service: homeassistant.turn_off
      entity_id: group.sunset_automations

###############################
# Vakantietimers
###############################
- id: holiday_evening_start
  alias: Holiday Evening Start
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunset
    offset: '+00:05:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.someone_home
        state: 'off'
      - condition: time
        before: '21:00:00'
  action:
    - service: script.select_lights_vacancy
    - service: automation.turn_on
      entity_id: automation.holiday_evening_end
    - service: script.notify_admin
      data:
        message: Vakantietimer geactiveerd
- id: holiday_evening_end
  alias: Holiday Evening End
  initial_state: 'off'
  trigger:
    platform: time
    at: '23:00:00'
  action:
    - service: script.select_lights_all_off
    - service: automation.turn_on
      entity_id: automation.holiday_morning_start
    - service: automation.turn_off
      entity_id: automation.holiday_evening_end
- id: holiday_morning_start
  alias: Holiday Morning Start
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunrise
    offset: '-01:00:00'
  action:
    - service: script.select_lights_vacancy
    - service: automation.turn_on
      entity_id: automation.holiday_morning_end
    - service: automation.turn_off
      entity_id: automation.holiday_morning_start
- id: holiday_morning_end
  alias: Holiday Morning End
  initial_state: 'off'
  trigger:
    platform: sun
    event: sunrise
  action:
    - service: script.select_lights_all_off
    - service: automation.turn_off
      entity_id: automation.holiday_morning_end

###############################
# Slaapkamer
###############################
- id: slaapkamer_tv
  alias: Slaapkamer TV
  trigger:
    platform: state
    entity_id: switch.tv_slaapkamer
  action:
    - service_template: >
        {% if trigger.to_state.state == 'on' %}
          script.turn_on
        {% else %}
          light.turn_off
        {% endif %}
      data_template:
        entity_id: >
          {% if trigger.to_state.state == 'on' %}
            script.tv_slaapkamer_aan
          {% else %}
            light.slaapkamer_achterwand
          {% endif %}
- id: slaapkamer_achterwand
  alias: Slaapkamer Achterwand
  trigger:
    platform: state
    entity_id: light.slaapkamer_achterwand
  action:
    - service_template: >
        {% if trigger.to_state.state == 'on' %}
          timer.cancel
        {% else %}
          timer.start
        {% endif %}
      entity_id: timer.tv_slaapkamer
- id: timer_tv_slaapkamer
  alias: Timer TV Slaapkamer
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.tv_slaapkamer
  action:
    - service: script.turn_off_tv_slaapkamer
- id: notify_warm_outside
  alias: Notificatie Warm Buiten
  trigger:
    - platform: numeric_state
      entity_id: sensor.temperatuurverschil_buiten_binnen
      above: 0
  action:
    - service: script.notify_admin
      data:
        message: Het is buiten warmer dan binnen
    - service: automation.turn_on
      entity_id: automation.notificatie_koud_buiten        
    - service: automation.turn_off
      entity_id: automation.notificatie_warm_buiten
- id: notify_cold_outside
  alias: Notificatie Koud Buiten
  trigger:
    - platform: numeric_state
      entity_id: sensor.temperatuurverschil_buiten_binnen
      below: 0
  action:
    - service: script.notify_admin
      data:
        message: Het is buiten kouder dan binnen
    - service: automation.turn_on
      entity_id: automation.notificatie_warm_buiten        
    - service: automation.turn_off
      entity_id: automation.notificatie_koud_buiten

###############################
# Rookmelders
###############################
- id: alert_rookmelder_hal
  alias: Waarschuwing Rookmelder Hal
  trigger:
  - platform: state
    entity_id: 'binary_sensor.rook_hal'
    from: 'off'
    to: 'on'
  action:
  - service: script.notify_alert
    data:
      message: Rook in de Hal
- id: test_rookmelder_hal
  alias: Test Rookmelder Hal
  trigger:
  - platform: state
    entity_id: 'binary_sensor.test_rookmelder_hal'
    from: 'off'
    to: 'on'
  action:
  - service: script.notify_admin
    data:
      message: TEST Rookmelder Hal
- id: alert_rookmelder_overloop
  alias: Waarschuwing Rookmelder Overloop
  trigger:
  - platform: state
    entity_id: 'binary_sensor.rook_overloop'
    from: 'off'
    to: 'on'
  action:
  - service: script.notify_alert
    data:
      message: Rook op de Overloop
- id: test_rookmelder_overloop
  alias: Test Rookmelder Overloop
  trigger:
  - platform: state
    entity_id: 'binary_sensor.test_rookmelder_overloop'
    from: 'off'
    to: 'on'
  action:
  - service: script.notify_admin
    data:
      message: TEST Rookmelder Overloop
- id: alert_rookmelder_zolder
  alias: Waarschuwing Rookmelder Zolder
  trigger:
  - platform: state
    entity_id: 'binary_sensor.rook_zolder'
    from: 'off'
    to: 'on'
  action:
  - service: script.notify_alert
    data:
      message: Rook op Zolder
- id: test_rookmelder_zolder
  alias: Test Rookmelder Zolder
  trigger:
  - platform: state
    entity_id: 'binary_sensor.test_rookmelder_zolder'
    from: 'off'
    to: 'on'
  action:
  - service: script.notify_admin
    data:
      message: TEST Rookmelder Zolder

